From olivier.temam at inria.fr  Fri Apr  3 11:18:25 2009
From: olivier.temam at inria.fr (Olivier Temam)
Date: Fri, 3 Apr 2009 11:18:25 +0200
Subject: [Plearn-developers] Plearn installation error due to wrong
	arguments in multiplyAcc ?
In-Reply-To: <2d1d7fe70903121001k386158e1g6890d004da499e92@mail.gmail.com>
References: <38dc1cea0903110951k13e3964vdd8c6e65aa8f90f6@mail.gmail.com> 
	<030357F3-C71F-48C4-B687-E319D3E0C9AC@apstat.com>
	<2d1d7fe70903111113q60144649yb79264172025e702@mail.gmail.com> 
	<2d1d7fe70903111119h7b7f2125jfa6855a38abb3ecf@mail.gmail.com> 
	<38dc1cea0903120834l7d27d52byee57c582139b784c@mail.gmail.com> 
	<2d1d7fe70903121001k386158e1g6890d004da499e92@mail.gmail.com>
Message-ID: <38dc1cea0904030218r6b376f8epe93793959be2e559@mail.gmail.com>

Hi Fred,

  Just a note about installation: I could install/compile plearn_full, but I
wanted to mention that there was a linking error with 'pymake -noblas
plearn_noblas' because it is apparently using the lapack libraries and the
-noblas flag seems to remove some of these libraries (see error messages
below). Maybe it was just me doing something wrong, but if not, you may to
remove the "-noblas" flag from the tutorial.

Take care,
Olivier

/home/olivier/___SVN___/inaccurate/exp/deep/PLearn/plearn/math/OBJS/linux-i386___g++_dbg_double_python25_noblas_logging=dbg_numpy/distr_maths.o:
In function `PLearn::lapack_Xsyevx_(char*, char*, char*, int*, double*,
int*, double*, double*, int*, int*, double*, int*, double*, double*, int*,
double*, int*, int*, int*, int*)':
/home/olivier/___SVN___/inaccurate/exp/deep/PLearn/plearn/math/plapack.h:56:
undefined reference to `dsyevx_'
/home/olivier/___SVN___/inaccurate/exp/deep/PLearn/plearn/math/OBJS/linux-i386___g++_dbg_double_python25_noblas_logging=dbg_numpy/plapack.o:
In function `PLearn::lapack_Xgesdd_(char*, int*, int*, double*, int*,
double*, double*, int*, double*, int*, double*, int*, int*, int*)':
/home/olivier/___SVN___/inaccurate/exp/deep/PLearn/plearn/math/plapack.h:62:
undefined reference to `dgesdd_'
/home/olivier/___SVN___/inaccurate/exp/deep/PLearn/plearn/math/OBJS/linux-i386___g++_dbg_double_python25_noblas_logging=dbg_numpy/plapack.o:
In function `PLearn::lapack_Xpotrs_(char*, int*, int*, double*, int*,
double*, int*, int*)':
/home/olivier/___SVN___/inaccurate/exp/deep/PLearn/plearn/math/plapack.h:91:
undefined reference to `dpotrs_'
/home/olivier/___SVN___/inaccurate/exp/deep/PLearn/plearn/math/OBJS/linux-i386___g++_dbg_double_python25_noblas_logging=dbg_numpy/plapack.o:
In function `PLearn::lapack_Xpotrf_(char*, int*, double*, int*, int*)':
/home/olivier/___SVN___/inaccurate/exp/deep/PLearn/plearn/math/plapack.h:84:
undefined reference to `dpotrf_'
collect2: ld returned 1 exit status
Link command failed to create file
/home/olivier/___SVN___/inaccurate/exp/deep/PLearn/commands/OBJS/linux-i386___g++_dbg_double_python25_noblas_logging=dbg_numpy/plearn_noblas_nolibblas______.new


On Thu, Mar 12, 2009 at 7:01 PM, Fr?d?ric Bastien <nouiz at nouiz.org> wrote:

> Hi,
>
> Just a quick help about compilation. This is the flags that I use most
> often:
>
> to compile
> pymake $PLEARNDIR/commands/plearn_{full,noblas,...}
>
> this will compile in debug mode. To compile in opt mode:
> pymake -opt $PLEARNDIR/commands/plearn_{full,noblas,...}
>
> To speed up the link time if your plearndir is on nfs:
> pymake -local_ofiles $PLEARNDIR/commands/plearn_{full,noblas,...}
>
> for parallel compilation on an SMP host where N is the number of parallel
> threads:
> pymake -local=N $PLEARNDIR/commands/plearn_{full,noblas,...}
>
> You can also make parallel compilation on many computer with ssh if you
> need to compile it many times(likes us when we devellop for it)
>
> To control the compilation verbosity their is the -v, -vv, -vvv, -vvvv
> option that default to -vv if I remember correctly.
>
> Fred
>
>
> On Thu, Mar 12, 2009 at 11:34 AM, Olivier Temam <olivier.temam at inria.fr>wrote:
>
>> Hi Frederic & Pascal,
>>
>>   Many thanks for your quick reply. It did solve this compilation problem.
>> I am still struggling with some link time issues but I will first try to
>> resolve them by myself before further bothering you.
>>
>> Take care,
>> Olivier
>>
>>
>> On Wed, Mar 11, 2009 at 7:19 PM, Fr?d?ric Bastien <nouiz at nouiz.org>wrote:
>>
>>> Hi,
>>>
>>> I have commited a fix update plearn to have it. The trouble is that the
>>> fct that exist is
>>> multiplyAcc(PLearn::Mat&, PLearn::Mat&, real)
>>> and it is
>>> multiplyAcc(PLearn::Mat&, PLearn::Mat&, int)
>>>
>>> that is called. Here the compiler cast the int to real(float or double,
>>> that is selected at compile time) automaticly.
>>> What is the compiler that you used and which version?
>>>
>>> thanks
>>>
>>> Fred
>>>
>>>
>>> On Wed, Mar 11, 2009 at 2:13 PM, Fr?d?ric Bastien <nouiz at nouiz.org>wrote:
>>>
>>>> Hi,
>>>>
>>>> a fast fix is to don't include this file if you don't need it. To do
>>>> this comment the line 257 in the file commands/plearn_noblas_inc.h
>>>>
>>>> here is this line to comment.
>>>>
>>>> #include <plearn_learners/online/ShuntingNNetLayerModule.h>
>>>>
>>>> Fred
>>>>
>>>>
>>>> On Wed, Mar 11, 2009 at 1:44 PM, Pascal Vincent <pascal at apstat.com>wrote:
>>>>
>>>>> Bonjour Olivier,
>>>>>
>>>>> Je fais suivre votre message ? la liste plearn-developers.
>>>>>
>>>>> Le 09-03-11 ? 12:51, Olivier Temam a ?crit :
>>>>>
>>>>> > Hi,
>>>>> >
>>>>> >   I am really not sure I am mailing this to the proper address, so
>>>>> > thanks in advance for redirecting me to the right one, though I
>>>>> > could not find any "users list" for Plearn.
>>>>> > I have an installation problem which does not seem to be related to
>>>>> > library dependence issues, but rather to a coding issue. It is in
>>>>> > file ShuntingNNetLayerModule.cc, and the problem seems to be that
>>>>> > method multiplyAcc is called with <TMat, TMat> arguments while I
>>>>> > could only find methods with TVec arguments in TMat_maths_impl.h.
>>>>> > The full error is shown below (I have no other compilation error).
>>>>> >
>>>>> > Thanks in advance for your help,
>>>>> > Olivier
>>>>> >
>>>>> >  /home/olivier/___SVN___/inaccurate/exp/deep/PLearn/plearn_learners/
>>>>> > online/ShuntingNNetLayerModule.cc: In member function ?virtual void
>>>>> > PLearn::ShuntingNNetLayerModule::bpropUpdate(const PLearn::Mat&,
>>>>> > const PLearn::Mat&, PLearn::Mat&, const PLearn::Mat&, bool)?:
>>>>> > /home/olivier/___SVN___/inaccurate/exp/deep/PLearn/plearn_learners/
>>>>> > online/ShuntingNNetLayerModule.cc:414: error: no matching function
>>>>> > for call to ?multiplyAcc(PLearn::Mat&, PLearn::Mat&, int)?
>>>>> > /home/olivier/___SVN___/inaccurate/exp/deep/PLearn/plearn_learners/
>>>>> > online/ShuntingNNetLayerModule.cc:415: error: no matching function
>>>>> > for call to ?multiplyAcc(PLearn::Mat&, PLearn::Mat&, int)?
>>>>> >
>>>>> >
>>>>>
>>>>> _______________________________________________
>>>>> Plearn-developers mailing list
>>>>> Plearn-developers at lists.berlios.de
>>>>> https://lists.berlios.de/mailman/listinfo/plearn-developers
>>>>>
>>>>
>>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/plearn-developers/attachments/20090403/c6055aa2/attachment.html>

From delallea at iro.umontreal.ca  Fri Apr  3 17:16:08 2009
From: delallea at iro.umontreal.ca (Olivier Delalleau)
Date: Fri, 3 Apr 2009 11:16:08 -0400
Subject: [Plearn-developers] Plearn installation error due to
	wrong	arguments in multiplyAcc ?
In-Reply-To: <38dc1cea0904030218r6b376f8epe93793959be2e559@mail.gmail.com>
References: <38dc1cea0903110951k13e3964vdd8c6e65aa8f90f6@mail.gmail.com>
	<030357F3-C71F-48C4-B687-E319D3E0C9AC@apstat.com>
	<2d1d7fe70903111113q60144649yb79264172025e702@mail.gmail.com>
	<2d1d7fe70903111119h7b7f2125jfa6855a38abb3ecf@mail.gmail.com>
	<38dc1cea0903120834l7d27d52byee57c582139b784c@mail.gmail.com>
	<2d1d7fe70903121001k386158e1g6890d004da499e92@mail.gmail.com>
	<38dc1cea0904030218r6b376f8epe93793959be2e559@mail.gmail.com>
Message-ID: <20090403151608.GA20209@opale.iro.umontreal.ca>

It should be fixed now, I removed the include of BetaKernel, which
eventually triggered the include of LAPACK. A better fix would have been
to edit distr_maths to hide the LAPACK-dependent stuff with -noblas, if
anyone feels like doing it.

-
Olivier

On 03 Apr 2009, Olivier Temam wrote:
> Hi Fred,
> 
>   Just a note about installation: I could install/compile plearn_full, but I
> wanted to mention that there was a linking error with 'pymake -noblas
> plearn_noblas' because it is apparently using the lapack libraries and the
> -noblas flag seems to remove some of these libraries (see error messages
> below). Maybe it was just me doing something wrong, but if not, you may to
> remove the "-noblas" flag from the tutorial.
> 
> Take care,
> Olivier
> 
> /home/olivier/___SVN___/inaccurate/exp/deep/PLearn/plearn/math/OBJS/linux-i386___g++_dbg_double_python25_noblas_logging=dbg_numpy/distr_maths.o:
> In function `PLearn::lapack_Xsyevx_(char*, char*, char*, int*, double*,
> int*, double*, double*, int*, int*, double*, int*, double*, double*, int*,
> double*, int*, int*, int*, int*)':
> /home/olivier/___SVN___/inaccurate/exp/deep/PLearn/plearn/math/plapack.h:56:
> undefined reference to `dsyevx_'
> /home/olivier/___SVN___/inaccurate/exp/deep/PLearn/plearn/math/OBJS/linux-i386___g++_dbg_double_python25_noblas_logging=dbg_numpy/plapack.o:
> In function `PLearn::lapack_Xgesdd_(char*, int*, int*, double*, int*,
> double*, double*, int*, double*, int*, double*, int*, int*, int*)':
> /home/olivier/___SVN___/inaccurate/exp/deep/PLearn/plearn/math/plapack.h:62:
> undefined reference to `dgesdd_'
> /home/olivier/___SVN___/inaccurate/exp/deep/PLearn/plearn/math/OBJS/linux-i386___g++_dbg_double_python25_noblas_logging=dbg_numpy/plapack.o:
> In function `PLearn::lapack_Xpotrs_(char*, int*, int*, double*, int*,
> double*, int*, int*)':
> /home/olivier/___SVN___/inaccurate/exp/deep/PLearn/plearn/math/plapack.h:91:
> undefined reference to `dpotrs_'
> /home/olivier/___SVN___/inaccurate/exp/deep/PLearn/plearn/math/OBJS/linux-i386___g++_dbg_double_python25_noblas_logging=dbg_numpy/plapack.o:
> In function `PLearn::lapack_Xpotrf_(char*, int*, double*, int*, int*)':
> /home/olivier/___SVN___/inaccurate/exp/deep/PLearn/plearn/math/plapack.h:84:
> undefined reference to `dpotrf_'
> collect2: ld returned 1 exit status
> Link command failed to create file
> /home/olivier/___SVN___/inaccurate/exp/deep/PLearn/commands/OBJS/linux-i386___g++_dbg_double_python25_noblas_logging=dbg_numpy/plearn_noblas_nolibblas______.new
> 
> 
> On Thu, Mar 12, 2009 at 7:01 PM, Fr?d?ric Bastien <nouiz at nouiz.org> wrote:
> 
> > Hi,
> >
> > Just a quick help about compilation. This is the flags that I use most
> > often:
> >
> > to compile
> > pymake $PLEARNDIR/commands/plearn_{full,noblas,...}
> >
> > this will compile in debug mode. To compile in opt mode:
> > pymake -opt $PLEARNDIR/commands/plearn_{full,noblas,...}
> >
> > To speed up the link time if your plearndir is on nfs:
> > pymake -local_ofiles $PLEARNDIR/commands/plearn_{full,noblas,...}
> >
> > for parallel compilation on an SMP host where N is the number of parallel
> > threads:
> > pymake -local=N $PLEARNDIR/commands/plearn_{full,noblas,...}
> >
> > You can also make parallel compilation on many computer with ssh if you
> > need to compile it many times(likes us when we devellop for it)
> >
> > To control the compilation verbosity their is the -v, -vv, -vvv, -vvvv
> > option that default to -vv if I remember correctly.
> >
> > Fred
> >
> >
> > On Thu, Mar 12, 2009 at 11:34 AM, Olivier Temam <olivier.temam at inria.fr>wrote:
> >
> >> Hi Frederic & Pascal,
> >>
> >>   Many thanks for your quick reply. It did solve this compilation problem.
> >> I am still struggling with some link time issues but I will first try to
> >> resolve them by myself before further bothering you.
> >>
> >> Take care,
> >> Olivier
> >>
> >>
> >> On Wed, Mar 11, 2009 at 7:19 PM, Fr?d?ric Bastien <nouiz at nouiz.org>wrote:
> >>
> >>> Hi,
> >>>
> >>> I have commited a fix update plearn to have it. The trouble is that the
> >>> fct that exist is
> >>> multiplyAcc(PLearn::Mat&, PLearn::Mat&, real)
> >>> and it is
> >>> multiplyAcc(PLearn::Mat&, PLearn::Mat&, int)
> >>>
> >>> that is called. Here the compiler cast the int to real(float or double,
> >>> that is selected at compile time) automaticly.
> >>> What is the compiler that you used and which version?
> >>>
> >>> thanks
> >>>
> >>> Fred
> >>>
> >>>
> >>> On Wed, Mar 11, 2009 at 2:13 PM, Fr?d?ric Bastien <nouiz at nouiz.org>wrote:
> >>>
> >>>> Hi,
> >>>>
> >>>> a fast fix is to don't include this file if you don't need it. To do
> >>>> this comment the line 257 in the file commands/plearn_noblas_inc.h
> >>>>
> >>>> here is this line to comment.
> >>>>
> >>>> #include <plearn_learners/online/ShuntingNNetLayerModule.h>
> >>>>
> >>>> Fred
> >>>>
> >>>>
> >>>> On Wed, Mar 11, 2009 at 1:44 PM, Pascal Vincent <pascal at apstat.com>wrote:
> >>>>
> >>>>> Bonjour Olivier,
> >>>>>
> >>>>> Je fais suivre votre message ? la liste plearn-developers.
> >>>>>
> >>>>> Le 09-03-11 ? 12:51, Olivier Temam a ?crit :
> >>>>>
> >>>>> > Hi,
> >>>>> >
> >>>>> >   I am really not sure I am mailing this to the proper address, so
> >>>>> > thanks in advance for redirecting me to the right one, though I
> >>>>> > could not find any "users list" for Plearn.
> >>>>> > I have an installation problem which does not seem to be related to
> >>>>> > library dependence issues, but rather to a coding issue. It is in
> >>>>> > file ShuntingNNetLayerModule.cc, and the problem seems to be that
> >>>>> > method multiplyAcc is called with <TMat, TMat> arguments while I
> >>>>> > could only find methods with TVec arguments in TMat_maths_impl.h.
> >>>>> > The full error is shown below (I have no other compilation error).
> >>>>> >
> >>>>> > Thanks in advance for your help,
> >>>>> > Olivier
> >>>>> >
> >>>>> >  /home/olivier/___SVN___/inaccurate/exp/deep/PLearn/plearn_learners/
> >>>>> > online/ShuntingNNetLayerModule.cc: In member function ?virtual void
> >>>>> > PLearn::ShuntingNNetLayerModule::bpropUpdate(const PLearn::Mat&,
> >>>>> > const PLearn::Mat&, PLearn::Mat&, const PLearn::Mat&, bool)?:
> >>>>> > /home/olivier/___SVN___/inaccurate/exp/deep/PLearn/plearn_learners/
> >>>>> > online/ShuntingNNetLayerModule.cc:414: error: no matching function
> >>>>> > for call to ?multiplyAcc(PLearn::Mat&, PLearn::Mat&, int)?
> >>>>> > /home/olivier/___SVN___/inaccurate/exp/deep/PLearn/plearn_learners/
> >>>>> > online/ShuntingNNetLayerModule.cc:415: error: no matching function
> >>>>> > for call to ?multiplyAcc(PLearn::Mat&, PLearn::Mat&, int)?
> >>>>> >
> >>>>> >
> >>>>>
> >>>>> _______________________________________________
> >>>>> Plearn-developers mailing list
> >>>>> Plearn-developers at lists.berlios.de
> >>>>> https://lists.berlios.de/mailman/listinfo/plearn-developers
> >>>>>
> >>>>
> >>>>
> >>>
> >>
> >

> _______________________________________________
> Plearn-developers mailing list
> Plearn-developers at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/plearn-developers



From delallea at iro.umontreal.ca  Fri Apr 17 18:00:26 2009
From: delallea at iro.umontreal.ca (Olivier Delalleau)
Date: Fri, 17 Apr 2009 12:00:26 -0400
Subject: [Plearn-developers] Test failure on mammouth (python 2.6)
Message-ID: <20090417160026.GA11415@opale.iro.umontreal.ca>

Just fyi,
On mammouth the test EmbeddedPython_InterfunctionXchg still fails, but
don't worry about it, it's not a big deal.

If someone cares to fix it, the issue is that in
InterfunctionXchgTest.cc, the line

    string s = python_other->invoke("get_value").as<string>();

triggers a deprecation warning caused by cgitb in python 2.6. There's
not much that can be done besides I guess redirecting the output of this
warning elsewhere so it does not show in the test output, but my
attempts to do so have been unsuccessful and I'm giving up on it now.
It should be safe to assume that a future release of cgitb will not use
anymore this deprecated feature, fixing the test at the same time, but
if anyone wants to get it fixed sooner, feel free to :) In the meantime,
just ignore this test failure.

--
Olivier


