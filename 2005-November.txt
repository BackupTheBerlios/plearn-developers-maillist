From delallea at iro.umontreal.ca  Wed Nov  2 15:27:19 2005
From: delallea at iro.umontreal.ca (Olivier Delalleau)
Date: Wed, 2 Nov 2005 09:27:19 -0500
Subject: [Plearn-developers] PRandom behaves differently with Boost 1.32 and 1.33
Message-ID: <20051102142719.GA27431@lsvm.iro.umontreal.ca>

Just to let you know, the Boost guys have unfortunately changed the
Mersenne Twister seeding algorithm (it is supposed to be better now) in
Boost 1.33, compared to Boost 1.32.
Unfortunately, the PRandom number generator relies on this specific
Boost random number generator, and thus its behavior has changed too.

Right now, it should not have too many consequences as not many classes
use the new PRandom number generator, namely:
- ThresholdedKernel
- BootstrapVMatrix
- SelectRowsMultiInstanceVMatrix
- GaussMix

Currently Boost 1.33 is installed at DIRO, but Boost 1.32 is still
installed on the Mammouth-Serie cluster (mainly because 1.33.0 is not
compatible with Intel Compiler, and I need to checkout a 1.33.1 cvs
snapshot to get it compiled). I will thus take the step to upgrade the
latter to Boost 1.33 very soon, as soon as the following question is
answered: if you need to still use the old seeding algorithm in order to
be able to repeat some important experiments, let me know
(Pierre-Jean?).

Note also that this difference will make the TMat_maths test fail with
Boost 1.32.

Hopefully they will not change it again in the future (fingers crossed).

--
Olivier



From delallea at iro.umontreal.ca  Wed Nov  2 15:53:11 2005
From: delallea at iro.umontreal.ca (Olivier Delalleau)
Date: Wed, 2 Nov 2005 09:53:11 -0500
Subject: [Plearn-developers] PRandom behaves differently with Boost 1.32 and 1.33
In-Reply-To: <20051102142719.GA27431@lsvm.iro.umontreal.ca>
References: <20051102142719.GA27431@lsvm.iro.umontreal.ca>
Message-ID: <20051102145310.GA28001@lsvm.iro.umontreal.ca>

Note also that, if you only want to upgrade mersenne_twister.hpp without
upgrading the whole Boost library, all you have to do is to get the 1.33
version on a LISA computer :
    ~lisa/local/linux-x86_64/include/boost-1_33/boost/random/mersenne_twister.hpp
and use it instead of your current 1.32 header.

On 02 Nov 2005, Olivier Delalleau wrote:
> Just to let you know, the Boost guys have unfortunately changed the
> Mersenne Twister seeding algorithm (it is supposed to be better now) in
> Boost 1.33, compared to Boost 1.32.
> Unfortunately, the PRandom number generator relies on this specific
> Boost random number generator, and thus its behavior has changed too.
> 
> Right now, it should not have too many consequences as not many classes
> use the new PRandom number generator, namely:
> - ThresholdedKernel
> - BootstrapVMatrix
> - SelectRowsMultiInstanceVMatrix
> - GaussMix
> 
> Currently Boost 1.33 is installed at DIRO, but Boost 1.32 is still
> installed on the Mammouth-Serie cluster (mainly because 1.33.0 is not
> compatible with Intel Compiler, and I need to checkout a 1.33.1 cvs
> snapshot to get it compiled). I will thus take the step to upgrade the
> latter to Boost 1.33 very soon, as soon as the following question is
> answered: if you need to still use the old seeding algorithm in order to
> be able to repeat some important experiments, let me know
> (Pierre-Jean?).
> 
> Note also that this difference will make the TMat_maths test fail with
> Boost 1.32.
> 
> Hopefully they will not change it again in the future (fingers crossed).
> 
> --
> Olivier
> 
> _______________________________________________
> Plearn-developers mailing list
> Plearn-developers at lists.berlios.de
> http://lists.berlios.de/mailman/listinfo/plearn-developers


From delallea at iro.umontreal.ca  Fri Nov  4 21:50:48 2005
From: delallea at iro.umontreal.ca (Olivier Delalleau)
Date: Fri, 4 Nov 2005 15:50:48 -0500
Subject: [Plearn-developers] Adding tests to the PLearn test-suite
Message-ID: <20051104205048.GA28391@lsvm.iro.umontreal.ca>

This email is intended to help anyone interested in creating his own
PLearn tests for the test suite. This test-suite is still in
development by its author Christian Dorion, but it is already usable and
should probably be used by anyone who wants to ensure his code does not
get broken accidentally.

The following instructions are a step-by-step example, whose goal is
just to help other people, myself, and future writers of a test-suite
documentation ;) They are not officially supported by Christian, and may
not work anymore on a later version of the test-suite.
In addition, those who already know of the test-suite may find the new
PLearn object class 'PTest' useeful to write C++ tests that do not make
the test-suite explode both in size and execution time (in addition to
provide understandable floating numbers diff through the PLearn diff
command applied on objects).

1. If it does not already exist, create the appropriate 'test'
directory, add this directory to the Subversion repository, and move
into it:
    mkdir ${PLEARNDIR}/plearn/var/test
    svn add ${PLEARNDIR}/plearn/var/test
    cd ${PLEARNDIR}/plearn/var/test

2. [Optional] If your test relies on more than a couple of custom files
(data files, scripts, ...), better create its own directory:
    mkdir Var_utils
    svn add Var_utils
    cd Var_utils

3. If it does not already exist, create a template 'pytest.config' file:
    pytest add

4. There are mainly two kinds of tests. If a simple '.plearn' or
'.pyplearn' script is enough to run the test (e.g. if you plan to test a
new PLearner class), go to step 14. If you need to create C++ code to
test some specific functions, go on to step 5.

5. Create a PTest subclass template:
    pyskeleton PTest VarUtilsTest
    
6. Edit the resulting files (e.g. VarUtilsTest.h and VarUtilsTest.cc):
    - fill the PLEARN_IMPLEMENT_OBJECT macro help:
        PLEARN_IMPLEMENT_OBJECT(
            VarUtilsTest,
            "Test various functions in Var_utils",
            ""
        );
    - write your actual test code in the perform() method
    - to store the test results, you can either:

        (a) display them (using the 'pout' or 'perr' PStreams, or the
        PLearn logging system):
            // In VarUtilsTest::perform
            pout << my_function(x) << endl;
            MAND_LOG << my_function(x) << endl;
        (b) store them in your PTest object options (this requires a
        little more work, but is actually easier to understand when the test
        fails):
            // In VarUtilsTest.h
            map<string, Vec> vec_results;
            // In VarUtilsTest::declareOptions
            declareOption(ol, "vec_results", &VarUtilsTest::vec_results,
                OptionBase::buildoption,
                "Test Vec results.");
            // In VarUtilsTest::perform
            vec_results["my_function"] = my_function(x);

7. Once your code compiles and is ready to be tested, add your new PTest
in 'PLearn/commands/plearn_tests_inc.h':
    #include <plearn/var/test/VarUtilsTest.h>

8. Edit your pytest.config file to specify how your test is supposed to be run.

    - Typically you will run 'plearn' on a '.plearn' or '.pyplearn'
    script (this script will describe one or more objects of your
    PTest subclass, with its specific options):
        Test(
            name = "Var_util",
            description = "Test various functions in Var_utils",
            program = GlobalCompilableProgram(
                name = "plearn",
                compiler = "pymake",
                compile_options = ""
            ),
            arguments = "varutils_test.plearn",
            resources = [ "varutils_test.plearn" ],
            precision = 1e-06,
            disabled = False
        )

    - But if your PTest object does not need extra options, you can save
    the use of a script:
        Test(
            name = "Var_util",
            description = "Test various functions in Var_utils",
            program = GlobalCompilableProgram(
                name = "plearn",
                compiler = "pymake",
                compile_options = ""
            ),
            arguments = "PLEARNDIR:scripts/command_line_object.plearn 'object=VarUtilsTest()'",
            resources = [ ],
            precision = 1e-06,
            disabled = False
        )

9. [Optional] For debug purpose, you may temporarily use 'plearn_tests'
instead of 'plearn' in pytest.config, and also comment out all tests but
your own test in 'plearn_tests_inc.h'. This will make compilation faster
when debugging your test. Setting 'compile_options' to '-opt' will also
probably speed up the link time.

10. Run your test to generate results. Check everything is fine in the
generated 'pytest/expected_results' directory. If it is not, fix your
code. Do this until you are happy with the results.
    pytest results

11. If you had made any of the actions described in optional step 9,
revert back to the standard test configuration.

12. Add your specific files to version control:
    svn add VarUtilsTest.h VarUtilsTest.cc

13. Go to step 19

14. Write your '.plearn' or '.pyplearn' script, and make sure it runs
smoothly.

15. Once you are confident it works fine, remove all the data that was
generated while running it (the script must generate data and / or
output to cout / cerr, otherwise it is useless).

16. Edit your 'pytest.config' file to specify how your test is to be
run:
        Test(
            name = "Var_util",
            description = "Test various functions in Var_utils",
            program = GlobalCompilableProgram(
                name = "plearn",
                compiler = "pymake",
                compile_options = ""
            ),
            arguments = "varutils_test.plearn",
            resources = [ "varutils_test.plearn" ],
            precision = 1e-06,
            disabled = False
        )

17. Run your test to generate results. Check everything is fine in the
generated 'pytest/expected_results' directory. If it is not, fix your
script. Do this until you are happy with the results.
    pytest results

18. Add your specific files to version control:
    svn add varutils_test.plearn

19. Add generic test files to version control:
    pytest vc_add

20. Do a 'svn status' and remove useless files marked with '?' (do not
accidentally delete some of your own important files!)

21. Check that your test works fine:
    pytest run

22. Do a 'svn status' to check what files have been generated but should
be ignored by version control, and ignore them:
    svn propedit svn:ignore pytest
        --> *.compilation_log
            run_results

23. Assuming your test passes correctly, it is ready for commit:
    cd ${PLEARNDIR}
    svn status          <-- to check which files you need to commit
    svn commit -m "New test: VarUtilsTest" commands/plearn_tests_inc.h plearn/var/test

Happy testing!

--
Olivier

PS: Christian, feel free to correct me if I said something wrong...


From delallea at iro.umontreal.ca  Mon Nov  7 17:31:59 2005
From: delallea at iro.umontreal.ca (Olivier Delalleau)
Date: Mon, 7 Nov 2005 11:31:59 -0500
Subject: [Plearn-developers] Adding tests to the PLearn test-suite
In-Reply-To: <20051104205048.GA28391@lsvm.iro.umontreal.ca>
References: <20051104205048.GA28391@lsvm.iro.umontreal.ca>
Message-ID: <20051107163159.GA20890@lsvm.iro.umontreal.ca>

A couple of remarks about my previous email:

On 04 Nov 2005, Olivier Delalleau wrote:
>             // In VarUtilsTest::declareOptions
>             declareOption(ol, "vec_results", &VarUtilsTest::vec_results,
>                 OptionBase::buildoption,
>                 "Test Vec results.");

Actually, a learnt option (OptionBase::learntoption) would be more
appropriate here.

> 18. Add your specific files to version control:
>     svn add varutils_test.plearn
> 
> 19. Add generic test files to version control:
>     pytest vc_add
> 
> 20. Do a 'svn status' and remove useless files marked with '?' (do not
> accidentally delete some of your own important files!)
> 
> 21. Check that your test works fine:
>     pytest run
> 

Better do step 21 (checking the test passes correctly) before step 19
(addition of files to the subversion repository). Pytest is indeed a bit
confused when trying to re-generate results while current results are
scheduled to be added, but not committed yet.

--
Olivier


From dorionc at apstat.com  Mon Nov  7 18:06:57 2005
From: dorionc at apstat.com (Christian Dorion)
Date: Mon, 07 Nov 2005 12:06:57 -0500
Subject: [Plearn-developers] Adding tests to the PLearn test-suite
In-Reply-To: <20051107163159.GA20890@lsvm.iro.umontreal.ca>
References: <20051104205048.GA28391@lsvm.iro.umontreal.ca> <20051107163159.GA20890@lsvm.iro.umontreal.ca>
Message-ID: <436F89B1.6020503@apstat.com>

Hi everyone,

About PyTest: a little undocumented (lazy me) convention that I'd like 
to see followed is to prefix PLearn test names by 'PL_' as much already 
are. The reason is quite simple; some day (in a hopefully close future) 
it will be possible to use a regexp to restrict the tests to be ran by 
'pytest run --all'. This may be useful, for example, for ApStat users 
since apstatsoft general tests are prefixed by 'AP_' while some project 
specific tests are prefixed 'LSE_' or 'CTA_'...

I'd really like this convention to be followed and I give you my word 
I'll document it when I'll release PyTest 1.0 ;)
Ciao.
-- 
*Christian Dorion*/
Doctorant en Finance (McGill's Faculty of Management)
M.Sc. Informatique et Recherche Op?rationnelle//
Apstat Technologies Inc./
http://www.apstat.com
T?l : (514) 343-9119, ext. 237

"Soyons r?alistes, exigeons l'impossible",
Ernesto "Che" Guevara, 1928-1967

"Love is a Temple, Love the higher Law",
One, U2
 

Olivier Delalleau wrote:

>A couple of remarks about my previous email:
>
>On 04 Nov 2005, Olivier Delalleau wrote:
>  
>
>>            // In VarUtilsTest::declareOptions
>>            declareOption(ol, "vec_results", &VarUtilsTest::vec_results,
>>                OptionBase::buildoption,
>>                "Test Vec results.");
>>    
>>
>
>Actually, a learnt option (OptionBase::learntoption) would be more
>appropriate here.
>
>  
>
>>18. Add your specific files to version control:
>>    svn add varutils_test.plearn
>>
>>19. Add generic test files to version control:
>>    pytest vc_add
>>
>>20. Do a 'svn status' and remove useless files marked with '?' (do not
>>accidentally delete some of your own important files!)
>>
>>21. Check that your test works fine:
>>    pytest run
>>
>>    
>>
>
>Better do step 21 (checking the test passes correctly) before step 19
>(addition of files to the subversion repository). Pytest is indeed a bit
>confused when trying to re-generate results while current results are
>scheduled to be added, but not committed yet.
>
>--
>Olivier
>_______________________________________________
>Plearn-developers mailing list
>Plearn-developers at lists.berlios.de
>http://lists.berlios.de/mailman/listinfo/plearn-developers
>  
>



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/plearn-developers/attachments/20051107/8f2ac649/attachment.html>

From delallea at iro.umontreal.ca  Tue Nov  8 17:47:20 2005
From: delallea at iro.umontreal.ca (Olivier Delalleau)
Date: Tue, 8 Nov 2005 11:47:20 -0500
Subject: [Plearn-developers] Re: Adding tests to the PLearn test-suite
In-Reply-To: <20051104205048.GA28391@lsvm.iro.umontreal.ca>
References: <20051104205048.GA28391@lsvm.iro.umontreal.ca>
Message-ID: <20051108164720.GA25872@lsvm.iro.umontreal.ca>

Note that, in order to prevent the main executable 'plearn' to become
too big, all tests should now use the new 'plearn_tests' program.

For debugging purpose when writing your own PTest class, you may want to
create your own 'plearn_mytest' program which would include only the
test you are writing, in order to speed-up compilation / linking.

--
Olivier


From dorionc at apstat.com  Mon Nov 14 16:28:53 2005
From: dorionc at apstat.com (Christian Dorion)
Date: Mon, 14 Nov 2005 10:28:53 -0500
Subject: [Plearn-developers] PyTest 0.9.2
Message-ID: <4378AD35.3070704@apstat.com>

Bonjour chers PLearners, (english summary follows)

 J'envisage de changer ce mercredi la structure de r?pertoire utilis?e 
par PyTest. Ainsi, par exemple, de

pytest
   A) expected_results
        a) PL_PyTestCore
                 PL_PyTestCore.run_log
        b) PL_PyTest_Modes
                 PL_PyTest_Modes.run_log
   B) run_results
        a) PL_PyTestCore
              PL_PyTestCore.run_log
        b) PL_PyTest_Modes
              PL_PyTest_Modes.run_log

on passera ?

.pytest
   A) PL_PyTestCore
        a) expected_results
                 RUN.log
        b) run_results
                 RUN.log
   B) PL_PyTest_Modes
        a) expected_results      
                 RUN.log
        b) run_results
                 RUN.log

Le r?pertoire ? usage interne de PyTest devient donc un r?pertoire cach? 
(SVN-style) et toute l'information relative ? un test est encapsul?e 
dans un sous-r?pertoire du .pytest. Cette encapsulation est n?cessaire 
pour la parall?lisation de PyTest et facilitera l'impl?mentation de 
l'?ventuel mode 'report' qui rendra un diagnostique plus verbeux pour 
les tests qui auront ?chou?.

Je vous encourage donc ? bien commit? vos tests pour Mercredi 16 
Novembre 6h30 AM ;)
Bonne journ?e ? tous

===
English summary
===
Please commit every PyTest-related material by Wednesday November 16th, 
6h30 AM. PyTest's directory  management is going to be modified then to 
ease future development.

Have a nice day
-- 
*Christian Dorion*/
Doctorant en Finance (McGill's Faculty of Management)
M.Sc. Informatique et Recherche Op?rationnelle//
Apstat Technologies Inc./
http://www.apstat.com
T?l : (514) 343-9119, ext. 237

"Soyons r?alistes, exigeons l'impossible",
Ernesto "Che" Guevara, 1928-1967

"Love is a Temple, Love the higher Law",
One, U2
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/plearn-developers/attachments/20051114/621f6f7e/attachment.html>

From dorionc at apstat.com  Wed Nov 16 15:41:59 2005
From: dorionc at apstat.com (Christian Dorion)
Date: Wed, 16 Nov 2005 09:41:59 -0500
Subject: [Plearn-developers] PyTest 0.9.2 -- Done
In-Reply-To: <4378AD35.3070704@apstat.com>
References: <4378AD35.3070704@apstat.com>
Message-ID: <437B4537.2040408@apstat.com>

Hi PLearners,

 The announced migration is completed for the PLearn repository. Expect 
your next "svn up" to be quite consistent ;) The old pytest results (the 
not hidden pytest directory) will be removed only Friday, in case 
anything went wrong. Meanwhile, please contact me if anything seems wrong.

Have a nice day.
Christian

Christian Dorion wrote:

> Bonjour chers PLearners, (english summary follows)
>
>  J'envisage de changer ce mercredi la structure de r?pertoire utilis?e 
> par PyTest. Ainsi, par exemple, de
>
> pytest
>    A) expected_results
>         a) PL_PyTestCore
>                  PL_PyTestCore.run_log
>         b) PL_PyTest_Modes
>                  PL_PyTest_Modes.run_log
>    B) run_results
>         a) PL_PyTestCore
>               PL_PyTestCore.run_log
>         b) PL_PyTest_Modes
>               PL_PyTest_Modes.run_log
>
> on passera ?
>
> .pytest
>    A) PL_PyTestCore
>         a) expected_results
>                  RUN.log
>         b) run_results
>                  RUN.log
>    B) PL_PyTest_Modes
>         a) expected_results      
>                  RUN.log
>         b) run_results
>                  RUN.log
>
> Le r?pertoire ? usage interne de PyTest devient donc un r?pertoire 
> cach? (SVN-style) et toute l'information relative ? un test est 
> encapsul?e dans un sous-r?pertoire du .pytest. Cette encapsulation est 
> n?cessaire pour la parall?lisation de PyTest et facilitera 
> l'impl?mentation de l'?ventuel mode 'report' qui rendra un 
> diagnostique plus verbeux pour les tests qui auront ?chou?.
>
> Je vous encourage donc ? bien commit? vos tests pour Mercredi 16 
> Novembre 6h30 AM ;)
> Bonne journ?e ? tous
>
> ===
> English summary
> ===
> Please commit every PyTest-related material by Wednesday November 
> 16th, 6h30 AM. PyTest's directory  management is going to be modified 
> then to ease future development.
>
> Have a nice day
> -- 
> *Christian Dorion*/
> Doctorant en Finance (McGill's Faculty of Management)
> M.Sc. Informatique et Recherche Op?rationnelle//
> Apstat Technologies Inc./
> http://www.apstat.com
> T?l : (514) 343-9119, ext. 237
>
> "Soyons r?alistes, exigeons l'impossible",
> Ernesto "Che" Guevara, 1928-1967
>
> "Love is a Temple, Love the higher Law",
> One, U2



-- 
*Christian Dorion*/
Doctorant en Finance (McGill's Faculty of Management)
M.Sc. Informatique et Recherche Op?rationnelle//
Apstat Technologies Inc./
http://www.apstat.com
T?l : (514) 343-9119, ext. 237

"Soyons r?alistes, exigeons l'impossible",
Ernesto "Che" Guevara, 1928-1967

"Love is a Temple, Love the higher Law",
One, U2
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/plearn-developers/attachments/20051116/7252cfdd/attachment.html>

